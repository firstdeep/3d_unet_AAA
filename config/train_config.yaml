# Sample configuration file for training a 3D U-Net on a task of predicting the nuclei in 3D stack from the lightsheet
# microscope. Training done with Binary Cross-Entropy.
# Training and validation data can be downloaded from: https://osf.io/thxzn/

#BH
trainer:
  # mode train or test 
  mode: "train"
  # gpu number 
  gpu_idx: 0
  # path to the checkpoint directory
  checkpoint_dir: "/home/bh/AAA/3d_unet_AAA/data_1227"
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
  resume: False
  save_model_path: "/home/bh/AAA/3d_unet_AAA/pretrained/"
# save_model_name: "mask_win_epoch100"
  save_model_name: "final_1228_256_epoch10"
  save_valid_name: "final0_0210"
  # max number of epochs
  max_epochs: 50
  # how many iterations between validations
  validation: False
  validate_after_iters: 10
  # model with higher eval score is considered better
  eval_score_higher_is_better: True
  

loss:
  # use BCE loss 
  # name: BCEWithLogitsLoss # network + sigmoid
  name: dice

# optimizer configuration
optimizer:
  # initial learning rate
  lr: 0.0003
  # weight decay
  weight_decay: 0.00001
 
aaa:
  transform: True
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 3
  # how many subprocesses to use for data loading
  num_workers: 128
  file_path: "/home/bh/AAA/3d_unet_AAA/data_1227/"
  prepro_path: "/home/bh/AAA/3d_unet_AAA/data_1227/preprocess/" 
  validation_path: "/home/bh/AAA/3d_unet_AAA/visualization/"

  raw_path: "raw_256"
  mask_path: "mask_256"
  raw_test_path: "raw_256_test"
  mask_test_path: "mask_256_test"
  weight_path: null

  # threshold number of slice in datasets
  slice_num: 32
  valid_ratio: 0.1

  # configuration of the train loader
  train:
    transformer:
      raw:
        # subtract mean and divide by std dev
        # - name: Standardize
        - name: RandomFlip
        - name: RandomRotate90
        - name: RandomRotate
          # rotate only in ZY plane due to anisotropy
          axes: [ [ 2, 1 ] ]
          # rotates by choosing random angle from [-30, 30] deg
          angle_spectrum: 30
          mode: reflect
        - name: ElasticDeformation
          spline_order: 3
        - name: ToTensor
          expand_dims: true

      label:
        - name: RandomFlip
        - name: RandomRotate90
        - name: RandomRotate
          # rotate only in ZY plane due to anisotropy
          axes: [ [ 2, 1 ] ]
          angle_spectrum: 30
          mode: reflect
        - name: ElasticDeformation
          spline_order: 0
          # convert target volume to binary mask
        - name: BlobsToMask
          # append ground truth labels in the last channel of the target for evaluation metric computation
          append_label: true
          # if 'true' appends boundary mask as a 2nd channel of the target; boundaries are computed using the 'find_boundaries()' function from skimage
          # learning the boundaries as a 2nd objective sometimes helps with the nuclei mask prediction
          boundary: false
        - name: ToTensor
          expand_dims: false




